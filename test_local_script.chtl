// 测试局部脚本块功能

// 基本的局部脚本
div {
    id: "click-box";
    style {
        .clickable {
            width: 200px;
            height: 100px;
            background: #f0f0f0;
            cursor: pointer;
            transition: all 0.3s;
        }
    }
    
    text { "点击我触发脚本" }
    
    // 局部脚本块
    script {
        // 局部脚本会被包装在作用域中，避免全局污染
        const element = document.getElementById('click-box');
        let clickCount = 0;
        
        element.addEventListener('click', function() {
            clickCount++;
            console.log(`已点击 ${clickCount} 次`);
            this.style.backgroundColor = `hsl(${clickCount * 30}, 70%, 50%)`;
        });
    }
}

// 使用 CHTL JS 增强选择器的局部脚本
button {
    class: "action-btn";
    
    style {
        .primary {
            background: #007bff;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
        }
    }
    
    text { "动作按钮" }
    
    script {
        // 使用 {{selector}} 增强选择器
        {{.action-btn}}.addEventListener('click', () => {
            console.log('Button clicked!');
            
            // 使用 -> 链式访问
            {{.action-btn}}->style.transform = 'scale(0.95)';
            
            setTimeout(() => {
                {{.action-btn}}->style.transform = 'scale(1)';
            }, 100);
        });
    }
}

// 局部脚本与局部样式配合
div {
    style {
        #timer-display {
            font-size: 24px;
            font-weight: bold;
            color: #333;
            padding: 20px;
            text-align: center;
            border: 2px solid #ddd;
        }
    }
    
    text { "00:00:00" }
    
    script {
        // 定时器示例
        let seconds = 0;
        const display = {{#timer-display}};
        
        setInterval(() => {
            seconds++;
            const hours = Math.floor(seconds / 3600);
            const minutes = Math.floor((seconds % 3600) / 60);
            const secs = seconds % 60;
            
            display->textContent = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;
        }, 1000);
    }
}

// 多个局部脚本的示例
ul {
    id: "todo-list";
    
    li { text { "任务 1" } }
    li { text { "任务 2" } }
    li { text { "任务 3" } }
    
    style {
        .completed {
            text-decoration: line-through;
            opacity: 0.6;
        }
    }
    
    script {
        // 为列表项添加点击完成功能
        {{#todo-list}}.addEventListener('click', (e) => {
            if (e.target.tagName === 'LI') {
                e.target.classList.toggle('completed');
            }
        });
    }
    
    script {
        // 另一个独立的脚本块 - 添加双击删除功能
        {{#todo-list}}.addEventListener('dblclick', (e) => {
            if (e.target.tagName === 'LI') {
                e.target.remove();
            }
        });
    }
}